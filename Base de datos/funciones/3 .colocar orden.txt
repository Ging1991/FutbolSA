-- FUNCTION: public.crear_orden(character varying, integer, integer, integer, integer)

-- DROP FUNCTION public.crear_orden(character varying, integer, integer, integer, integer);

CREATE OR REPLACE FUNCTION public.colocar_orden(
	p_jugador integer,
	p_club integer,
	p_tipo char,
	p_cantidad integer,
	p_precio integer)
    RETURNS void
    LANGUAGE 'plpgsql'

AS $BODY$



	DECLARE
		cantidad int;

	begin

select *
into cantidad
from fut_jugadores;
/*


-- Primero: Verifico que el usuario exista
    	select count(id)
        into cantidad
        from fut_usuarios
        where id = p_usuario;
        
        if (cantidad = 0) then
        	raise exception 'El usuario que emite la orden no se encuentra registrado en nuestra base de datos.';
    	end if;
        
    	-- Segundo: Verifico que la accion exista
    	select count(id_accion)
        into cantidad
        from fut_acciones
        where id_accion = p_accion;
        
        if (cantidad = 0) then
        	raise exception 'La accion sobre la cual versa la orden no se encuentra registrado en nuestra base de datos.';
    	end if;
        
        -- Tercero: Verifico que el tipo es compra o venta, y no otra cosa
        if not(p_tipo = 'C' or p_tipo = 'V') then
			raise exception 'El tipo de orden solo puede ser compra o venta.';
    	end if;
        
    	-- Cuarto: Si es una venta verifico que el usuario tenga las acciones que quiere vender    
        if (p_tipo = 'V') then
			select sum(coalesce(can.cantidad, 0) )
            into cantidad
            from (
                select cantidad -- Las acciones que ya esta intentando vender
                from fut_ordenes
                where id_jugador = p_usuario
                    and id_accion = p_accion
                    and tipo = 'V'
                union
                select cantidad -- Las acciones que efectivamente tiene
                from fut_posesiones
                where id_jugador = p_usuario
                    and id_accion = p_accion) can;
                        
			if (p_cantidad > cantidad) then             
				raise exception 'El usuario no puede vender mas acciones de las que tiene.';
			end if;
            
    	end if;
        
        -- Quinto: Si es una compra verifico que tenga el dinero necesario para hacer la compra
        if (p_tipo = 'C') then
			select sum(coalesce(din.dinero, 0) )
            into cantidad
            from (
                select dinero -- El dinero que efectivamente tiene
                from fut_usuarios
                where id = p_usuario
                union
                select (o.cantidad*precio_unitario*(-1)) as dinero -- Lo que esta poniendo para comprar otras acciones
                from fut_ordenes o
                where id_usuario = p_usuario
                    and id_accion = p_accion
                    and tipo = 'C') din;

            if (p_cantidad * p_precio_limite) > cantidad then
				raise exception 'El usuario no dispone suficiente dinero.';
			end if;

    	end if;
        
    	-- Finalmente coloco la orden
        insert into fut_ordenes
        	(tipo, id_usuario, id_accion, cantidad, precio_unitario, fecha, total)
        values
        	(p_tipo, p_usuario, p_accion, p_cantidad, p_precio_limite, now(), true);
*/
	end;
    

$BODY$;


